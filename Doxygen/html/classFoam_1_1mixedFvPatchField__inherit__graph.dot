digraph "mixedFvPatchField&lt; Type &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="mixedFvPatchField\<\l Type \>",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="This boundary condition provides a base class for 'mixed' type boundary conditions,..."];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="fvPatchField\< Type \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1fvPatchField.html",tooltip="Abstract base class with a fat-interface to all derived classes covering all possible ways in which t..."];
  Node1 -> Node11 [id="edge2_Node000001_Node000011",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="externalCoupledMixedFvPatch\lField\< scalar \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1externalCoupledMixedFvPatchField.html",tooltip=" "];
  Node1 -> Node13 [id="edge3_Node000001_Node000013",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node13 [id="Node000013",label="advectiveFvPatchField\l\< Type \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1advectiveFvPatchField.html",tooltip="This boundary condition provides an advective outflow condition, based on solving DDt(W,..."];
  Node1 -> Node16 [id="edge4_Node000001_Node000016",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node16 [id="Node000016",label="codedMixedFvPatchField\l\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1codedMixedFvPatchField.html",tooltip="Constructs on-the-fly a new boundary condition (derived from mixedFvPatchField) which is then used to..."];
  Node1 -> Node17 [id="edge5_Node000001_Node000017",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node17 [id="Node000017",label="exprMixedFvPatchField\l\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1exprMixedFvPatchField.html",tooltip="A mixed boundary condition with expressions."];
  Node1 -> Node18 [id="edge6_Node000001_Node000018",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node18 [id="Node000018",label="externalCoupledMixedFvPatch\lField\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1externalCoupledMixedFvPatchField.html",tooltip="Extends the mixed boundary condition with serialisation functions."];
  Node18 -> Node11 [id="edge7_Node000018_Node000011",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< scalar \>",fontcolor="grey" ];
  Node1 -> Node19 [id="edge8_Node000001_Node000019",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node19 [id="Node000019",label="inletOutletFvPatchField\l\< Type \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1inletOutletFvPatchField.html",tooltip="This boundary condition provides a generic outflow condition, with specified inflow for the case of r..."];
  Node1 -> Node21 [id="edge9_Node000001_Node000021",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node21 [id="Node000021",label="mappedMixedFieldFvPatchField\l\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1mappedMixedFieldFvPatchField.html",tooltip="This boundary condition provides a self-contained version of e.g. mapped boundary conditions."];
  Node1 -> Node22 [id="edge10_Node000001_Node000022",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node22 [id="Node000022",label="mappedMixedFvPatchField\l\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1mappedMixedFvPatchField.html",tooltip="This boundary condition maps the value at a set of cells or patch faces back to *this."];
  Node1 -> Node23 [id="edge11_Node000001_Node000023",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node23 [id="Node000023",label="outletInletFvPatchField\l\< Type \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1outletInletFvPatchField.html",tooltip="This boundary condition provides a generic inflow condition, with specified outflow for the case of r..."];
  Node1 -> Node25 [id="edge12_Node000001_Node000025",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node25 [id="Node000025",label="uniformInletOutletFvPatch\lField\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1uniformInletOutletFvPatchField.html",tooltip="Variant of inletOutlet boundary condition with uniform inletValue."];
  Node1 -> Node26 [id="edge13_Node000001_Node000026",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node26 [id="Node000026",label="uniformMixedFvPatchField\l\< Type \>",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1uniformMixedFvPatchField.html",tooltip="This boundary condition provides 'mixed' type boundary condition that mix a uniform fixed value and a..."];
  Node1 -> Node27 [id="edge14_Node000001_Node000027",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< scalar \>",fontcolor="grey" ];
  Node27 [id="Node000027",label="mixedFvPatchField\<\l scalar \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1mixedFvPatchField.html",tooltip=" "];
  Node1 -> Node31 [id="edge15_Node000001_Node000031",dir="back",color="orange",style="dashed",tooltip=" ",label=" \< vector \>",fontcolor="grey" ];
  Node31 [id="Node000031",label="mixedFvPatchField\<\l vector \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1mixedFvPatchField.html",tooltip=" "];
}
