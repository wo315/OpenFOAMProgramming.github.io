digraph "codedFunctionObject"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="codedFunctionObject",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Provides a general interface to enable dynamic code compilation."];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="timeFunctionObject",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1functionObjects_1_1timeFunctionObject.html",tooltip="Virtual base class for function objects with a reference to Time."];
  Node34 -> Node1 [id="edge2_Node000001_Node000034",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node34 [id="Node000034",label="codedBase",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1codedBase.html",tooltip="Base class for function objects and boundary conditions using dynamic code that provides methods for ..."];
  Node35 -> Node1 [id="edge3_Node000001_Node000035",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" dict_",fontcolor="grey" ];
  Node35 [id="Node000035",label="dictionary",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1dictionary.html",tooltip="A list of keyword definitions, which are a keyword followed by a number of values (eg,..."];
  Node35 -> Node35 [id="edge4_Node000035_Node000035",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" null",fontcolor="grey" ];
  Node4 -> Node1 [id="edge5_Node000001_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" name_",fontcolor="grey" ];
  Node4 [id="Node000004",label="word",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1word.html",tooltip="A class for handling words, derived from Foam::string."];
  Node5 -> Node4 [id="edge6_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="string",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1string.html",tooltip="A class for handling character strings derived from std::string."];
  Node5 -> Node5 [id="edge7_Node000005_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" null",fontcolor="grey" ];
  Node4 -> Node4 [id="edge8_Node000004_Node000004",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" null",fontcolor="grey" ];
  Node5 -> Node1 [id="edge9_Node000001_Node000005",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" codeData_\ncodeEnd_\ncodeExecute_\ncodeRead_\ncodeWrite_",fontcolor="grey" ];
  Node40 -> Node1 [id="edge10_Node000001_Node000040",dir="back",color="darkorchid3",style="dashed",tooltip=" ",label=" redirectFunctionObjectPtr_",fontcolor="grey" ];
  Node40 [id="Node000040",label="autoPtr\< Foam::functionObject \>",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1autoPtr.html",tooltip=" "];
}
