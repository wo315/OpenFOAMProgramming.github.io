digraph "IFstream"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="IFstream",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Input from file stream, using an ISstream."];
  Node2 -> Node1 [id="edge1_Node000001_Node000002",dir="back",color="firebrick4",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="ifstreamPointer",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1ifstreamPointer.html",tooltip="A wrapped std::ifstream with possible compression handling (igzstream) that behaves much like a std::..."];
  Node3 -> Node1 [id="edge2_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="ISstream",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1ISstream.html",tooltip="Generic input stream using a standard (STL) stream."];
  Node1 -> Node7 [id="edge3_Node000001_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="ensightReadFile",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1ensightReadFile.html",tooltip="A variant of IFstream with specialised read() for strings, integers and floats. Correctly handles bin..."];
}
