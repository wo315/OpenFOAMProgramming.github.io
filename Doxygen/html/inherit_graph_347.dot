digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node0 [id="Node000000",label="base64Layer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1base64Layer.html",tooltip="An output filter layer to write base-64 encoded content."];
  Node0 -> Node1 [id="edge4194_Node000000_Node000001",dir="back",color="darkgreen",style="solid",tooltip=" "];
  Node1 [id="Node000001",label="foamVtkBase64Layer",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1foamVtkBase64Layer.html",tooltip="Base-64 encoded output layer - normally only used indirectly by formatters."];
  Node1 -> Node2 [id="edge4195_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="appendBase64Formatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1appendBase64Formatter.html",tooltip="Appended base-64 encoded binary output. Uses an output filter layer to write base-64 encoded content."];
  Node1 -> Node3 [id="edge4196_Node000001_Node000003",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="base64Formatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1base64Formatter.html",tooltip="Inline base-64 encoded binary output. Uses an output filter layer to write base-64 encoded content."];
  Node4 [id="Node000004",label="formatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1formatter.html",tooltip="Abstract class for a VTK output stream formatter."];
  Node4 -> Node5 [id="edge4197_Node000004_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="appendRawFormatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1appendRawFormatter.html",tooltip="Appended raw binary output."];
  Node4 -> Node6 [id="edge4198_Node000004_Node000006",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="asciiFormatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1asciiFormatter.html",tooltip="Inline ASCII output. Adds spaces between entries and a newline every 9 items (for consistency with wh..."];
  Node6 -> Node7 [id="edge4199_Node000006_Node000007",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="legacyAsciiFormatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1legacyAsciiFormatter.html",tooltip="Formatting as per Foam::vtk::asciiFormatter, but with naming for legacy output."];
  Node4 -> Node1 [id="edge4200_Node000004_Node000001",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 -> Node8 [id="edge4201_Node000004_Node000008",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="legacyRawFormatter",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$classFoam_1_1vtk_1_1legacyRawFormatter.html",tooltip="Binary output for the VTK legacy format, always written as big-endian and with 32-bit integers."];
}
