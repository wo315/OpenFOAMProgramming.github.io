digraph "plane"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [id="Node000001",label="plane",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="Geometric class that creates a 3D plane and can return the intersection point between a line and the ..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="cuttingPlane",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$classFoam_1_1cuttingPlane.html",tooltip="Constructs cutting plane through a mesh."];
  Node1 -> Node4 [id="edge2_Node000001_Node000004",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="searchableDisk",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1searchableDisk.html",tooltip="Searching on circular disk given as origin, normal (gets normalised) and radius. Optionally it can be..."];
  Node1 -> Node5 [id="edge3_Node000001_Node000005",dir="back",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="searchablePlane",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classFoam_1_1searchablePlane.html",tooltip="Searching on (infinite) plane. The dictionary specifications are identical to the Foam::plane require..."];
}
